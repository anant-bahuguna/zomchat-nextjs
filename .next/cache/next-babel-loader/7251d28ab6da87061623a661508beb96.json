{"ast":null,"code":"var _jsxFileName = \"/mnt/e/dev/nextjs/tailwind-next-1/components/layout/ChatSection.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { ChatInputBox, ReceivedMessage, SentMessage } from \"../chat\"; // message type = 0 for received messages\n// message type = 1 for sent messages\n\nconst ChatSection = () => {\n  const {\n    0: messages,\n    1: sendMessage\n  } = useState([{\n    body: `yeah hahaha\n        some other comment\n        why are you so awesome`,\n    type: 0\n  }, {\n    body: `Here are the Tailwind Docs`,\n    type: 1\n  }, {\n    body: `Does that result in the raw svg being inlined in\n        the DOM?`,\n    type: 0\n  }, {\n    body: `This is handy if you don't want to load SVG as a\n        separate file.`,\n    type: 0\n  }, {\n    body: `This is handly if You Don't want to load as a\n        separate SVG file`,\n    type: 1\n  }, {\n    body: \"Exactly the same way as in Vue impulse\",\n    type: 0\n  }, {\n    body: `I think it can slow down the page if there's too\n        much bloat in the document.\n        Compared to loading it externally.`,\n    type: 0\n  }, {\n    body: `Comparison would be better if it's not also\n        comparing an vector svg to a raster gif, it's a\n        difference in rendering too.`,\n    type: 0\n  }]);\n  return (// <div className=\" flex-1 flex justify-between\">\n    __jsx(\"div\", {\n      className: \"bg-gray-750 flex-1 flex flex-col justify-between font-chat text-gray-200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"text-sm text-gray-400 overflow-y-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, messages.map((message, index) => message.type === 0 ? __jsx(ReceivedMessage, {\n      message: message,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 43\n      }\n    }) : __jsx(SentMessage, {\n      message: message,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 97\n      }\n    }))), __jsx(ChatInputBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })) // </div>\n\n  );\n};\n\nexport default ChatSection;","map":{"version":3,"sources":["/mnt/e/dev/nextjs/tailwind-next-1/components/layout/ChatSection.js"],"names":["useState","ChatInputBox","ReceivedMessage","SentMessage","ChatSection","messages","sendMessage","body","type","map","message","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,WAAxC,QAA2D,SAA3D,C,CAEA;AACA;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,CACrC;AACIO,IAAAA,IAAI,EAAG;;+BADX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GADqC,EAOrC;AAAED,IAAAA,IAAI,EAAG,4BAAT;AACJC,IAAAA,IAAI,EAAE;AADF,GAPqC,EASrC;AACID,IAAAA,IAAI,EAAG;iBADX;AAGIC,IAAAA,IAAI,EAAE;AAHV,GATqC,EAcrC;AACID,IAAAA,IAAI,EAAG;uBADX;AAGIC,IAAAA,IAAI,EAAE;AAHV,GAdqC,EAmBrC;AACID,IAAAA,IAAI,EAAG;0BADX;AAGAC,IAAAA,IAAI,EAAE;AAHN,GAnBqC,EAwBrC;AAAED,IAAAA,IAAI,EAAE,wCAAR;AAAkDC,IAAAA,IAAI,EAAE;AAAxD,GAxBqC,EAyBrC;AACID,IAAAA,IAAI,EAAG;;2CADX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GAzBqC,EA+BrC;AACID,IAAAA,IAAI,EAAG;;qCADX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GA/BqC,CAAD,CAAxC;AAsCA,SACI;AACA;AAAK,MAAA,SAAS,EAAC,0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,QAAQ,CAACI,GAAT,CAAa,CAACC,OAAD,EAASC,KAAT,KACVD,OAAO,CAACF,IAAR,KAAiB,CAAjB,GAAsB,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEE,OAA1B;AAAmC,MAAA,GAAG,EAAEC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAA4E,MAAC,WAAD;AAAa,MAAA,OAAO,EAAED,OAAtB;AAA+B,MAAA,GAAG,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/E,CADL,CADJ,EAQI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,CAYI;;AAZJ;AAcH,CArDD;;AAuDA,eAAeP,WAAf","sourcesContent":["import { useState } from \"react\";\nimport { ChatInputBox, ReceivedMessage, SentMessage } from \"../chat\";\n\n// message type = 0 for received messages\n// message type = 1 for sent messages\n\nconst ChatSection = () => {\n    const [messages, sendMessage] = useState([\n        {\n            body: `yeah hahaha\n        some other comment\n        why are you so awesome`,\n            type: 0,\n        },\n        { body: `Here are the Tailwind Docs`,\n    type: 1 },\n        {\n            body: `Does that result in the raw svg being inlined in\n        the DOM?`,\n            type: 0,\n        },\n        {\n            body: `This is handy if you don't want to load SVG as a\n        separate file.`,\n            type: 0,\n        },\n        {\n            body: `This is handly if You Don't want to load as a\n        separate SVG file`,\n        type: 1\n        },\n        { body: \"Exactly the same way as in Vue impulse\", type: 0 },\n        {\n            body: `I think it can slow down the page if there's too\n        much bloat in the document.\n        Compared to loading it externally.`,\n            type: 0,\n        },\n        {\n            body: `Comparison would be better if it's not also\n        comparing an vector svg to a raster gif, it's a\n        difference in rendering too.`,\n            type: 0,\n        },\n    ]);\n    return (\n        // <div className=\" flex-1 flex justify-between\">\n        <div className=\"bg-gray-750 flex-1 flex flex-col justify-between font-chat text-gray-200\">\n            <div className=\"text-sm text-gray-400 overflow-y-auto\">\n                {messages.map((message,index) => \n                    message.type === 0 ? (<ReceivedMessage message={message} key={index} />) : (<SentMessage message={message} key={index}/>)\n                )}\n                \n                \n            </div>\n            <ChatInputBox />\n        </div>\n        // </div>\n    );\n};\n\nexport default ChatSection;\n"]},"metadata":{},"sourceType":"module"}