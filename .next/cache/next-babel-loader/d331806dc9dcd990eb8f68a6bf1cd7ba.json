{"ast":null,"code":"var _jsxFileName = \"/mnt/e/dev/nextjs/tailwind-next-1/components/layout/ChatSection.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport { ChatInputBox, ReceivedMessage, SentMessage } from \"../chat\"; // message type = 0 for received messages\n// message type = 1 for sent messages\n\nconst ChatSection = () => {\n  const {\n    0: messages,\n    1: sendMessage\n  } = useState([{\n    body: `yeah hahaha\n        some other comment\n        why are you so awesome`,\n    type: 0\n  }, {\n    body: `Here are the Tailwind Docs`,\n    type: 1\n  }, {\n    body: `Does that result in the raw svg being inlined in\n        the DOM?`,\n    type: 0\n  }, {\n    body: `This is handy if you don't want to load SVG as a\n        separate file.`,\n    type: 0\n  }, {\n    body: `This is handly if You Don't want to load as a\n        separate SVG file`,\n    type: 1\n  }, {\n    body: \"Exactly the same way as in Vue impulse\",\n    type: 0\n  }, {\n    body: `I think it can slow down the page if there's too\n        much bloat in the document.\n        Compared to loading it externally.`,\n    type: 0\n  }, {\n    body: `Comparison would be better if it's not also\n        comparing an vector svg to a raster gif, it's a\n        difference in rendering too.`,\n    type: 0\n  }]);\n  const myRef = useRef(null);\n  useEffect(() => {\n    scrollToRef(myRef);\n  }, [messages.length]);\n  return (// <div className=\" flex-1 flex justify-between\">\n    __jsx(\"div\", {\n      className: \"bg-gray-750 flex-1 flex flex-col justify-between font-chat text-gray-200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"text-sm text-gray-400 overflow-y-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, messages.map((message, index) => message.type === 0 ? __jsx(ReceivedMessage, {\n      message: message,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }) : __jsx(SentMessage, {\n      message: message,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }))), __jsx(\"div\", {\n      ref: myRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), __jsx(ChatInputBox, {\n      messages: messages,\n      sendMessage: sendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })) // </div>\n\n  );\n};\n\nexport default ChatSection;\n\nconst scrollToRef = ref => window.scrollTo(0, ref.current.offsetTop);","map":{"version":3,"sources":["/mnt/e/dev/nextjs/tailwind-next-1/components/layout/ChatSection.js"],"names":["useState","useRef","useEffect","ChatInputBox","ReceivedMessage","SentMessage","ChatSection","messages","sendMessage","body","type","myRef","scrollToRef","length","map","message","index","ref","window","scrollTo","current","offsetTop"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,MAAlB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,WAAxC,QAA2D,SAA3D,C,CAEA;AACA;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,CACrC;AACIS,IAAAA,IAAI,EAAG;;+BADX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GADqC,EAOrC;AAAED,IAAAA,IAAI,EAAG,4BAAT;AAAsCC,IAAAA,IAAI,EAAE;AAA5C,GAPqC,EAQrC;AACID,IAAAA,IAAI,EAAG;iBADX;AAGIC,IAAAA,IAAI,EAAE;AAHV,GARqC,EAarC;AACID,IAAAA,IAAI,EAAG;uBADX;AAGIC,IAAAA,IAAI,EAAE;AAHV,GAbqC,EAkBrC;AACID,IAAAA,IAAI,EAAG;0BADX;AAGIC,IAAAA,IAAI,EAAE;AAHV,GAlBqC,EAuBrC;AAAED,IAAAA,IAAI,EAAE,wCAAR;AAAkDC,IAAAA,IAAI,EAAE;AAAxD,GAvBqC,EAwBrC;AACID,IAAAA,IAAI,EAAG;;2CADX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GAxBqC,EA8BrC;AACID,IAAAA,IAAI,EAAG;;qCADX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GA9BqC,CAAD,CAAxC;AAsCA,QAAMC,KAAK,GAAGV,MAAM,CAAC,IAAD,CAApB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,CAACD,KAAD,CAAX;AACH,GAFQ,EAEN,CAACJ,QAAQ,CAACM,MAAV,CAFM,CAAT;AAIA,SACI;AACA;AAAK,MAAA,SAAS,EAAC,0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,QAAQ,CAACO,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACVD,OAAO,CAACL,IAAR,KAAiB,CAAjB,GACI,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEK,OAA1B;AAAmC,MAAA,GAAG,EAAEC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAGI,MAAC,WAAD;AAAa,MAAA,OAAO,EAAED,OAAtB;AAA+B,MAAA,GAAG,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJP,CADL,CADJ,EAUI;AAAK,MAAA,GAAG,EAAEL,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAWI,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAEJ,QAAxB;AAAkC,MAAA,WAAW,EAAEC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CAFJ,CAeI;;AAfJ;AAiBH,CA7DD;;AA+DA,eAAeF,WAAf;;AAGA,MAAMM,WAAW,GAAIK,GAAD,IAASC,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBF,GAAG,CAACG,OAAJ,CAAYC,SAA/B,CAA7B","sourcesContent":["import { useState,useRef, useEffect } from \"react\";\nimport { ChatInputBox, ReceivedMessage, SentMessage } from \"../chat\";\n\n// message type = 0 for received messages\n// message type = 1 for sent messages\n\nconst ChatSection = () => {\n    const [messages, sendMessage] = useState([\n        {\n            body: `yeah hahaha\n        some other comment\n        why are you so awesome`,\n            type: 0,\n        },\n        { body: `Here are the Tailwind Docs`, type: 1 },\n        {\n            body: `Does that result in the raw svg being inlined in\n        the DOM?`,\n            type: 0,\n        },\n        {\n            body: `This is handy if you don't want to load SVG as a\n        separate file.`,\n            type: 0,\n        },\n        {\n            body: `This is handly if You Don't want to load as a\n        separate SVG file`,\n            type: 1,\n        },\n        { body: \"Exactly the same way as in Vue impulse\", type: 0 },\n        {\n            body: `I think it can slow down the page if there's too\n        much bloat in the document.\n        Compared to loading it externally.`,\n            type: 0,\n        },\n        {\n            body: `Comparison would be better if it's not also\n        comparing an vector svg to a raster gif, it's a\n        difference in rendering too.`,\n            type: 0,\n        },\n    ]);\n\n    const myRef = useRef(null)\n    useEffect(() => {\n        scrollToRef(myRef)\n    }, [messages.length])\n\n    return (\n        // <div className=\" flex-1 flex justify-between\">\n        <div className=\"bg-gray-750 flex-1 flex flex-col justify-between font-chat text-gray-200\">\n            <div className=\"text-sm text-gray-400 overflow-y-auto\">\n                {messages.map((message, index) =>\n                    message.type === 0 ? (\n                        <ReceivedMessage message={message} key={index} />\n                    ) : (\n                        <SentMessage message={message} key={index} />\n                    )\n                )}\n            </div>\n            <div ref={myRef}></div>\n            <ChatInputBox messages={messages} sendMessage={sendMessage}/>\n        </div>\n        // </div>\n    );\n};\n\nexport default ChatSection;\n\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop) "]},"metadata":{},"sourceType":"module"}